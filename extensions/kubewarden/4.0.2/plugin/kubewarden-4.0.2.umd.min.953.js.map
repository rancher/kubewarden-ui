{"version":3,"file":"kubewarden-4.0.2.umd.min.953.js","mappings":"mRAGA,MAAMA,EAAa,CAAEC,MAAO,kBAiB5B,OAA4BC,EAAAA,EAAAA,iBAAiB,CAC3CC,OAAQ,gBACRC,KAAAA,CAAMC,GCPR,MAAMC,GAAQC,EAAAA,EAAAA,MAEd,IAAIC,EAA8C,KAElDC,eAAeC,IACb,MAAMC,GAAkBH,GAAOI,QAAQC,UAAYL,GAAOM,MAAMC,SAAS,sBACnEC,EAAeR,GAAOI,QAAQC,SAGhCF,SACIM,EAAAA,EAAAA,IAAgCX,GAAO,IAG3CU,GAAgBR,GAAOM,MAAMC,SAAS,8BAClCE,EAAAA,EAAAA,IAAyBX,GAAO,EAAOU,EAEjD,CD6BA,OC3BAE,EAAAA,EAAAA,YAAUT,UAER,GADAH,EAAMa,OAAO,mCAAmC,IAC3CX,EAAO,CACV,MAAMY,GAAWC,EAAAA,EAAAA,sBAEjB,IAAID,GAAUE,OAAOC,OAGnB,OAFAf,EAAQY,EAASE,MAAMC,MAI3B,OAEMC,EAAAA,EAAAA,kBACAd,IAENJ,EAAMa,OAAO,mCAAmC,EAAM,IDYjD,CAACM,EAAUC,MACRC,EAAAA,EAAAA,cAAcC,EAAAA,EAAAA,oBAAoB,MAAO5B,GAEnD,I,sBEzDA,MAAM6B,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O,wBCLA,IAAIC,EAAU,EAAQ,OACnBA,EAAQC,aAAYD,EAAUA,EAAQE,SACnB,kBAAZF,IAAsBA,EAAU,CAAC,CAACG,EAAOC,GAAIJ,EAAS,MAC7DA,EAAQK,SAAQF,EAAOG,QAAUN,EAAQK,QAE5C,IAAIE,EAAM,WACGA,EAAI,WAAYP,GAAS,EAAM,CAAC,WAAY,EAAM,YAAa,G,wFCNxEQ,EAA0B,IAA4B,KAE1DA,EAAwBC,KAAK,CAACN,EAAOC,GAAI,iDAAkD,KAE3F,c","sources":["webpack://kubewarden-4.0.2/./components/PolicyReporter/ReporterPanel.vue?698f","webpack://kubewarden-4.0.2/./components/PolicyReporter/ReporterPanel.vue","webpack://kubewarden-4.0.2/./components/PolicyReporter/ReporterPanel.vue?d4ae","webpack://kubewarden-4.0.2/./components/PolicyReporter/ReporterPanel.vue?7f5f","webpack://kubewarden-4.0.2/./components/PolicyReporter/ReporterPanel.vue?0a5c"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"reporter-panel\" }\n\nimport { onMounted, getCurrentInstance, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport { RouteLocationNormalizedLoaded } from 'vue-router';\n\nimport { ClusterPolicyReport, PolicyReport } from '@kubewarden/types';\nimport { getReports } from '@kubewarden/modules/policyReporter';\n\n/**\n * Invisible panel to fetch PolicyReports for ResourceList\n * views. Instead of running a fetch on each resource within\n * the list we can fetch once at the top of the page and\n * store the reports.\n */\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ReporterPanel',\n  setup(__props) {\n\nconst store = useStore();\n\nlet route: RouteLocationNormalizedLoaded | null = null;\n\nasync function fetchPolicies() {\n  const isClusterLevel = !route?.params?.resource || route?.path?.includes('projectsnamespaces');\n  const resourceType = route?.params?.resource as string | undefined;\n\n  // Fetch cluster level reports if no specific resource is specified\n  if (isClusterLevel) {\n    await getReports<ClusterPolicyReport>(store, true);\n  }\n  // Fetch normal policy reports if a specific resource type is specified or always fetch on projectsnamespaces page\n  if (resourceType || route?.path?.includes('projectsnamespaces')) {\n    await getReports<PolicyReport>(store, false, resourceType);\n  }\n}\n\nonMounted(async() => {\n  store.commit('kubewarden/updateLoadingReports', true);\n  if (!route) {\n    const instance = getCurrentInstance();\n\n    if (instance?.proxy?.$route) {\n      route = instance.proxy.$route;\n    } else {\n      return;\n    }\n  }\n\n  await nextTick();\n  await fetchPolicies();\n\n  store.commit('kubewarden/updateLoadingReports', false);\n});\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1))\n}\n}\n\n})","<script setup lang=\"ts\">\nimport { onMounted, getCurrentInstance, nextTick } from 'vue';\nimport { useStore } from 'vuex';\nimport { RouteLocationNormalizedLoaded } from 'vue-router';\n\nimport { ClusterPolicyReport, PolicyReport } from '@kubewarden/types';\nimport { getReports } from '@kubewarden/modules/policyReporter';\n\n/**\n * Invisible panel to fetch PolicyReports for ResourceList\n * views. Instead of running a fetch on each resource within\n * the list we can fetch once at the top of the page and\n * store the reports.\n */\n\nconst store = useStore();\n\nlet route: RouteLocationNormalizedLoaded | null = null;\n\nasync function fetchPolicies() {\n  const isClusterLevel = !route?.params?.resource || route?.path?.includes('projectsnamespaces');\n  const resourceType = route?.params?.resource as string | undefined;\n\n  // Fetch cluster level reports if no specific resource is specified\n  if (isClusterLevel) {\n    await getReports<ClusterPolicyReport>(store, true);\n  }\n  // Fetch normal policy reports if a specific resource type is specified or always fetch on projectsnamespaces page\n  if (resourceType || route?.path?.includes('projectsnamespaces')) {\n    await getReports<PolicyReport>(store, false, resourceType);\n  }\n}\n\nonMounted(async() => {\n  store.commit('kubewarden/updateLoadingReports', true);\n  if (!route) {\n    const instance = getCurrentInstance();\n\n    if (instance?.proxy?.$route) {\n      route = instance.proxy.$route;\n    } else {\n      return;\n    }\n  }\n\n  await nextTick();\n  await fetchPolicies();\n\n  store.commit('kubewarden/updateLoadingReports', false);\n});\n</script>\n\n<template>\n  <div class=\"reporter-panel\"></div>\n</template>\n\n<style lang=\"scss\" scoped>\n.reporter-panel {\n  display: none;\n}\n</style>\n","import script from \"./ReporterPanel.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ReporterPanel.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./ReporterPanel.vue?vue&type=style&index=0&id=89862d6c&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-89862d6c\"]])\n\nexport default __exports__","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./ReporterPanel.vue?vue&type=style&index=0&id=89862d6c&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"19181145\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".reporter-panel[data-v-89862d6c]{display:none}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["_hoisted_1","class","_defineComponent","__name","setup","__props","store","useStore","route","async","fetchPolicies","isClusterLevel","params","resource","path","includes","resourceType","getReports","onMounted","commit","instance","getCurrentInstance","proxy","$route","nextTick","_ctx","_cache","_openBlock","_createElementBlock","__exports__","content","__esModule","default","module","id","locals","exports","add","___CSS_LOADER_EXPORT___","push"],"sourceRoot":""}