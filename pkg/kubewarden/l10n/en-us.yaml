product:
  # This is used as the display name of the product in the UI SideNav
  kubewarden: Admission Policy Management

kubewarden:
  title: Kubewarden
  unavailability:
    banner: 'You do not have access to the {type}. Please contact your administrator.'
    type:
      dashboard: Kubewarden Dashboard
      policyReporter: Policy Reporter
      metricsDashboard: Metrics Dashboard
      tracingDashboard: Tracing Dashboard
  generic:
    name: Name
  dashboard:
    title: Dashboard
    install: Install
    notInstalled: Kubewarden is not installed
    button: Install Kubewarden Prerequisites
    intro: Welcome to Kubewarden
    blurb: A Dynamic Admission Controller for Kubernetes
    description: |
      Kubewarden is a policy engine for Kubernetes. It helps with keeping your Kubernetes clusters secure and compliant. Kubewarden policies can be written using regular programming languages or Domain Specific Languages (DSL). Policies are compiled into WebAssembly modules that are then distributed using traditional container registries.
    getStarted: Get Started
    issues: Issues
    upgrade:
      appVersion: App Version
      appUpgrade: App Upgrade
      controllerChart: Controller
      defaultsChart: Defaults
      appVersionUnsatisfied: 'The app version of the Kubewarden Defaults ({defaultsAppVersion}) chart does not match the app version of the Kubewarden Controller chart ({controllerAppVersion}). This chart will need to be updated to match the app version of the Kubewarden Controller chart.'
    policyReports:
      oldPolicyReportsIncompatible: 'Policy Reports are not compatible with the current version of the Kubewarden App. Please update to version v1.11.0 or newer.'
      newPolicyReportsIncompatible: 'Policy Reports are not compatible with the current version of the Kubewarden extension. Please update to version 1.4.0 or newer.'
    headers:
      policyServer:
        title: Policy Servers
        description: Policy Servers validate requests
        linkText: Create Policy Server
      admissionPolicy:
        title: Namespaced Policies
        description: Namespace-wide policy validation
        linkText: Create Namespaced Policy
      clusterAdmissionPolicy:
        title: Cluster Policies
        description: Cluster-wide policy validation
        linkText: Create Cluster Policy
      modes:
        title: Modes
        monitor: Monitor
        protect: Protect
      reports:
        title: Reports
        success: Success
        fail: Fail
        error: Error
    appInstall:
      title: Kubewarden App Install
      description: This will take you to the app installation page for Kubewarden.
      button: Install Kubewarden
      stepTitle: Kubewarden Install
      reload: Unable to fetch Kubewarden Helm chart - reload required.
      versionError:
        title: Chart Version not found.
        message: Unable to determine the latest stable version of the kubewarden-controller chart. Please make sure the Helm repository is configured correctly.
    prerequisites:
      title: Prerequisites
      certManager:
        title: Install Cert-Manager Package
        description: The kubewarden-controller depends on cert-manager. You need cert-manager to be installed before installing the kubewarden-controller chart.
        manualStep: |
          Click the button below and follow the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/next/quick-start#installation">Documentation</a>, or run the <code>kubectl</code> command to install the latest version of cert-manager:
        applyCommand: 'kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml'
        openShell: Open Kubectl Shell
        stepProgress: The active step will progress once Cert-Manager is installed.
      repository:
        title: Repository
        description: You will need the Kubewarden Helm repository (https://charts.kubewarden.io) to install the `kubewarden` chart.
      airGapped:
        warning: 'An air-gapped installation has been detected, this will require intervention to enable access to Kubewarden images and policies. It is necessary to make them available from an OCI registry that is accessible to the cluster.'
        docs: |
          Follow the documentation to setup an OCI registry for further installation.
  group:
    detail:
      columns:
        backgroundAudit: Background Audit
        mode: Mode
        policyServer: Policy Server
        module: Module
  policy:
    title: Policies
    legacyAccordionTitle: Legacy Policies
  tabs:
    security-contexts:
      label: Security Contexts
    general:
      label: General
      nameOverride:
        label: nameOverride
        description: Replaces the release name of the chart in Chart.yaml file when this is used to construct Kubernetes object names.
      fullnameOverride:
        label: fullnameOverride
        description: Completely replaces the generated release name.
      imagePullSecrets:
        label: Image Pull Secrets
        description: Secrets to pull container images from private registries.
      image:
        label: Image
        description: Controller image to be used.
        repository: Repository
        tag: Tag
      preDeleteJob: Kubectl image to be used in the pre-delete helm hook.
      podAnnotations: Pod Annotations
      nodeSelector: Node Selector
      tolerations: Tolerations
      affinity: Affinity
      tls:
        source: Source
        certManagerIssuerName: Cert-Manager Issuer Name
    telemetry:
      label: Telemetry
      checkbox: Enabled
      port: Port
      tracing:
        label: Tracing
        endpoint: Endpoint
        jaeger: Jaeger endpoint to send traces.
        placeholder: all-in-one-collector.jaeger.svc.cluster.local:14250
    verification:
      label: Verification
    registry:
      label: Container Registry
  policyServer:
    title: Policy Servers
    noDefaultsInstalled:
      description: |
        The default PolicyServer and policies are not installed, click the button below to begin installing this chart. See the <a target="_blank" rel="noopener noreferrer nofollow" href="https://docs.kubewarden.io/next/quick-start#installation">documentation</a> for more information on installing charts.
      button: Install Chart
    policyGauge:
      byStatus: Policies by Status
      traces: Policy Validations
    groups:
      kind: Policy Type
  admissionPolicy:
    title: Admission Policies
    description: AdmissionPolicy is a namespace-wide resource. These policies will process only the requests that are targeting the Namespace where the AdmissionPolicy is defined.
  clusterAdmissionPolicy:
    title: Cluster Admission Policies
    description: ClusterAdmissionPolicy is a cluster-wide resource. These policies will process all requests within the cluster where the ClusterAdmissionPolicy is defined.
    kwDefaultsSettingsCompatibility: ClusterAdmissionPolicies that derive from kubewarden-default Helm Chart will not have editable policy settings since the kubewarden-default Helm Chart version should be greater or equal than 2.0.0
    defaultsUpdateBtn: Update
  customPolicy:
    badge: Custom
    title: Custom Policy
    description: A generic template for using your own policy.
  policyTable:
    headers:
      resource: Resource Type
      features: Features
  policies:
    noPolicyRepo: No policy repository found. Please add a policy repository to view policies.
    noOfficialPolicies: No official policies found. Please add <a href="https://kubewarden.github.io/policy-catalog/" target="_blank" rel="noopener noreferrer nofollow">policy catalog repository</a> to view official policies.
    noArtifactHub: Official Kubewarden policies are hosted on <a href="https://artifacthub.io/packages/search?kind=13" target="_blank" rel="noopener noreferrer nofollow">ArtifactHub</a>, in order to show these you will need to add `artifacthub.io` to the whitelist-domain setting.
    noRules: There are no rules configured for this policy.
    namespaceWarning: This policy is targeting Rancher specific namespaces which will cause catastrophic failures with your Rancher deployment.
    official: Official Rancher Policy
    airgap:
      banner: 'An air-gapped installation is detected, you will be unable to use the policies listed within the ArtifactHub catalog. You are still able to deploy a custom policy by referencing a WebAssembly module that is accessible to this cluster.'
  utils:
    attributes:
      label: Attributes
      optionLabels:
        all: All
        organization: Organization
        keyword: Keyword
        resource: Resource
        features: Features
    keyword: Show Keywords & Features
    source: Show Source
    resource: Show Resource Types
    search: Filter
    resetFilter: Reset Filter
    official:
      label: Show only official Rancher policies
    custom:
      create: Create Custom Policy
  tracing:
    description: Tracing allows to collect fine grained details about policy evaluations. It can be a useful tool for debugging issues inside of your Kubewarden deployment and policies.
    prerequisites:
      label: Prerequisites
      description: There are a few resources which need to be installed for tracing to work correctly with the Kubewarden Controller.
      warning: The deployments of these resources can take a few minutes to become active.
      outdated: The tracing configuration is outdated, please update the configuration.
      unsupported: The custom tracing configuration is unsupported, please update the configuration to use the sidecar.
      incomplete: The tracing configuration is incomplete, please update the configuration.
    certService: |
      <a href="https://github.com/cert-manager/cert-manager" target="_blank" rel="noopener noreferrer nofollow" >Cert-Manager</a> must be installed inside the cluster, follow the <a href="https://docs.kubewarden.io/next/howtos/telemetry/opentelemetry-qs#install-opentelemetry" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to setup cert-manager.
    installOpenTelemetry: |
      Click the button below  or run the <code>kubectl</code> command to install the latest version of OpenTelemetry.
    openTelemetry: |
      The <a href="https://github.com/open-telemetry/opentelemetry-operator" target="_blank" rel="noopener noreferrer nofollow">OpenTelemetry Operator</a> must be installed, follow the <a href="https://docs.kubewarden.io/next/howtos/telemetry/opentelemetry-qs#install-opentelemetry" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to setup the OpenTelemetry Operator.
    jaeger: |
      The <a href="https://github.com/jaegertracing/jaeger-operator" target="_blank" rel="noopener noreferrer nofollow">Jaeger Operator and Instance</a> must be installed, follow the <a href="https://docs.kubewarden.io/next/howtos/telemetry/tracing-qs" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to setup tracing for your policies.
    noRelatedPolicies: No related policies found.
    noRelatedTraces: No tracing data exists for the related policies.
    noTraces: No tracing data exists for this policy.
    config:
      label: |
        Tracing must be <a href="https://docs.kubewarden.io/next/howtos/ui-extension/tracing#update-rancher-kubewarden-controller-with-jaeger-endpoint" target="_blank" rel="noopener noreferrer nofollow">enabled and configured</a> with a Jaeger endpoint in the "Telemetry" tab of the Kubewarden Controller chart settings.
      link: Update Config
  monitoring:
    notInstalled: |
      The Monitoring app is not installed, this will will need to be installed and configured to enable metrics. Follow <a href="https://docs.kubewarden.io/next/howtos/ui-extension/metrics" target="_blank" rel="noopener noreferrer nofollow">these steps</a> to add the Kubewarden ServiceMonitor for Prometheus.
    install: Install Monitoring
    prerequisites:
      label: Prerequisites
      description: There are a few resources which need to be installed and configured correctly for monitoring to be available.
      warning: The deployments of these resources can take a few minutes to become active.
      outdated: The metrics configuration is outdated, please update the configuration.
      unsupported: The custom metrics configuration is unsupported, please update the configuration to use the sidecar.
      incomplete: The metrics configuration is incomplete, please update the configuration.
      tooltips:
        prerequisites: The prerequisite steps have not been completed.
        appNotInstalled: The { app } app is not yet installed.
        nsNotFound: 'The Namespace `cattle-dashboards` cannot be found.'
        chartError: The { chart } chart cannot be found, ensure the repository exists and try reloading the page.
        monitorsNotFound: No Service Monitors found in the `{ namespace }` namespace connected to the Policy Server.
      monitoringApp:
        label: The Rancher Monitoring app must be installed. Follow the <a href="https://ranchermanager.docs.rancher.com/how-to-guides/advanced-user-guides/monitoring-alerting-guides/enable-monitoring" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to install and enable Rancher Monitoring.
        install: Install App
        edit: Edit Config
      serviceMonitor:
        label: A Service Monitor for this Policy Server does not exist. Follow the <a href="https://docs.kubewarden.io/next/howtos/ui-extension/metrics#install" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to learn more about Service Monitors.
        upgrade:
          label: The Service Monitor for this Policy Server is outdated. Follow the <a href="https://docs.kubewarden.io/next/howtos/ui-extension/metrics#upgrade" target="_blank" rel="noopener noreferrer nofollow">documentation</a> to learn more about Service Monitors.
      configMap:
        label: Grafana Dashboards (ConfigMaps) for the Policy Servers and for Kubewarden Policies must be created.
        button: Add Dashboards
        conflictingDashboardsBanner: |-
          {count, plural,
          =1 {There is a conflicting ConfigMap, this must be deleted before proceeding:}
          other {There are conflicting ConfigMaps, the following must be deleted before proceeding:}
          }
      controllerConfig:
        label: The Kubewarden Controller must be configured to enable metrics. Follow <a href="https://docs.kubewarden.io/next/howtos/ui-extension/metrics#enable-telemetry-for-your-rancher-kubewarden-controller-resource" target="_blank" rel="noopener noreferrer nofollow">these steps</a> to properly configure the kubewarden-controller chart.
        button: Edit Config
    warning:
      noProxy: The Grafana proxy URL can not be found or is configured incorrectly.

  metrics:
    notInstalled: The Grafana dashboard for this Kubewarden resource can not be found. You need to create the ConfigMap for the dashboard.
    reload: Grafana dashboard created - reload required
    noService: The Metrics service is not currently active or is not installed correctly. Check the status of the Monitoring app.

  policyConfig:
    columns:
      module: Module
      settings: Settings
    tabs:
      general: General
      rules: Rules
      namespaceSelector: Namespace Selector
      settings: Settings
      contextAware: Context Aware Resources
      matchConditions: Match Conditions
    serverSelect:
      label: Policy Server
      tooltip: The PolicyServer that will receive the requests to be validated.
    matchConditions:
      label: Match Conditions
      add: Add Match Condition
      remove: Remove Condition
      description: Match Conditions use <a href="https://kubernetes.io/docs/reference/using-api/cel/" target="_blank" rel="noopener noreferrer nofollow">CEL expressions</a> to define fine-grained request filtering for policies, evaluating conditions before applying policy rules. This field only takes effect if the Kubernetes cluster has the <code>AdmissionWebhookMatchConditions</code> feature gate enabled.
      name:
        placeholder: e.g. exclude-resource
      expression:
        label: Expression
    module:
      label: Module
      tooltip: This is the WebAssembly module that holds the validation or mutation logic.
      placeholder: ghcr.io/example/policies/custom-policy:v0.1.0
    mutating:
      label: Mutating
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    mode:
      label: Mode
      tooltip: The monitor mode is a way to deploy policies to the cluster in a way that all requests that go through the policy will be accepted, as if the policy didn't exist. Defaults to 'Protect'.
      warning: Once the policy mode has been switched to Protect, you will not be able to revert this change.
      update:
        checkbox: Update to Protect Mode
        title: Update Policy Mode
        body: The monitor mode is a way to view the behavior of a policy without letting it make the final decision on requests that are validated by the policy.
    backgroundAudit:
      label: Background Audit
      tooltip: 'Indicates whether a policy should be used or skipped when performing audit checks. If false, the policy cannot produce meaningful evaluation results during audit checks and will be skipped. The default is "true".'
    ignoreRancherNamespaces:
      label: Ignore Rancher Namespaces
      tooltip: Certain policies will break core services of Rancher, this will add a default list of namespaces to ignore.
    namespaceSelector:
      label: Namespace Selector
      description: NamespaceSelector decides whether to evaluate the policy on a request, based on whether the namespace for that request matches the selector. If the object of the request is a namespace, the matching is performed on object.metadata.labels. If the object is another cluster scoped resource, it never skips the policy evaluation.
      addSelector: Add Selectors
      matchExpressions:
        label: Match Expressions
        tooltip: matchExpressions is a list of label selector requirements.
      matchLabels:
        label: Match Labels
        tooltip: "matchLabels is a map of key, value pairs. A single key, value in the matchLabels map is equivalent to an element of matchExpressions, whose key field is 'key', the operator is 'In', and the values array contains only 'value'."
    rules:
      add: Add Rule Set
      remove: Remove Rule Set
    apiGroups:
      label: API Groups
      tooltip: The API groups the resources belong to.
    apiVersions:
      label: API Versions
      tooltip: The API versions the resources belong to.
    operations:
      label: Operation type
      tooltip: The operations the admission hook cares about - CREATE, UPDATE, DELETE, CONNECT.
    resources:
      label: Resource type
      tooltip: The targeted resources for the policy. Needs to be a resource that is supported by the policy, this is determined in the `metadata.yml` of the selected policy.
    scope:
      label: Scope
      tooltip: Specifies the scope of this rule. Valid values are "Cluster", "Namespaced", and "". "Cluster" means that only cluster-scoped resources will match this rule. Namespace API objects are cluster-scoped. "Namespaced" means that only namespaced resources will match this rule. "" means that there are no scope restrictions. Subresources match the scope of their parent resource. Default is "*".
    contextAware:
      label: Context Aware Resources
      description: A list of Kubernetes resources the policy is allowed to access at evaluation time. Access to these resources is done using the ServiceAccount of the PolicyServer the policy is assigned to.
      warning: >-
        Kubewarden administrators need to thoroughly examine the types of resources that a policy will access in order to prevent any misuse or abuse of the system. In some cases, it may be necessary to increase the permissions of the ServiceAccount associated with the PolicyServer to enable the policy to retrieve the required information. Although policies are restricted to read-only access to Kubernetes resources, there is a risk that a malicious attacker could exploit a Kubewarden policy to extract sensitive data from the cluster.
      resource:
        add: Add Resource
        remove: Remove Resource
        apiVersion:
          label: API Version
          tooltip: This is the apiVersion of the resource (v1 for core group, groupName/groupVersions for other).
        kind:
          label: Kind
          tooltip: Singular PascalCase name of the resource
    description:
      showReadme: Show Readme
  policyServerConfig:
    securityContexts:
      containerConfig: Container configuration
      podConfig: Pod configuration
      allow-priv-escalation:
        label: Allow Privilege Escalation
        tooltip: Allow Privilege Escalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the "no_new_privs" flag will be set on the container process
      capabilities:
        title: Capabilities
        add: Added Capabilities
        drop: Dropped Capabilities
        addLabel: Add
        placeholder: Capability
      privileged:
        label: Run container in privileged mode
        tooltip: Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host
      procMount:
        label: ProcMount
        placeholder: ProcMount type
      readOnlyRootFilesystem:
        label: Whether this container has a read-only root filesystem
      runAsNonRoot:
        label: Container must run as a non-root user
        tooltip: If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does
      runAsGroup: Run As Group
      runAsUser: Run As User
      seLinuxOptions:
        title: SE Linux Options
        level:
          label: SELinux level
          placeholder: SELinux level label
        role:
          label: SELinux role
          placeholder: SELinux role label
        type:
          label: SELinux type
          placeholder: SELinux type label
        user:
          label: SELinux user
          placeholder: SELinux user label
      seccompProfile:
        title: Seccomp Profile
        inputEnabledLabel: Add Seccomp Profile Configuration
        localhostProfile:
          label: Localhost Profile
          placeholder: Localhost Profile
        type: Type
      windowsOptions:
        title: Windows Options
        gmsaCredentialSpec:
          label: GMSA Credential Spec
          placeholder: GMSA Credential Spec
        gmsaCredentialSpecName:
          label: GMSA Credential Spec Name
          placeholder: GMSA Credential Spec Name
        hostProcess:
          label: Run as a 'Host Process' container
          tooltip: All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true
        runAsUserName:
          label: Run As UserName
          placeholder: Run As UserName
      fsGroup:
        label: FS Group
      fsGroupChangePolicy:
        label: FS Group change Policy
        placeholder: FS Group change Policy
      supplementalGroups:
        addLabel: Add Group
        label: Supplemental Group
      sysctls:
        addLabel: Add Sysctls
        label: Sysctls
        name:
          label: Name
          placeholder: Name
        value:
          label: Value
          placeholder: Value
    defaultImage:
      label: Default Image
      tooltip: Use the default `policy-server` container image.
      versionWarning: The latest stable version for Policy Server could not be determined, falling back to default.
    image:
      label: Image URL
      tooltip: This is the container image the policy server.
    replicas: Replicas
    registry:
      description: The PolicyServer allows you to pull policies from OCI registries and HTTP servers, by default HTTPS is enforced with host TLS verification. You can interact with registries using untrusted certificates or even without TLS by using the `insecureSources` setting. This approach is highly discouraged in environments closer to production. More information on configuring custom certificate authorities can be found <a href="https://docs.kubewarden.io/next/howtos/policy-servers/custom-cas" target="_blank" rel="noopener noreferrer nofollow">here</a>.
    insecureSources:
      title: Insecure Sources
      addLabel: Add Insecure Source
      placeholder: registry-dev.example.com:5500
    sourceAuthorities:
      title: Source Authorities
      add: Add Source Authority
      endpoint: Registry URI Endpoint
      placeholder: registry-pre.example.com:5500
      certificate:
        label: Certificate
        add: Add PEM Certificate
        remove: Remove Certificate
        file: Read Certificate from File
    verification:
      label: Verification Config
      description: This is the name of a VerificationConfig configmap within the same namespace, containing a Sigstore verification configuration. The configuration must be under a key named verification-config in the Configmap. More information can be found in the <a href="https://docs.kubewarden.io/next/howtos/secure-supply-chain#configuring-the-policy-server-to-check-policy-signatures" target="_blank" rel="noopener noreferrer nofollow">Kubewarden docs</a>.
  policyCharts:
    signedPolicy:
      label: Signed
      tooltip: This policy has been signed with { signatures }.
    mutationPolicy:
      label: Mutation
      tooltip: A mutating policy will rebuild the requests with definied values that are conformant with the policy definition.
    contextAware:
      label: Context Aware
      tooltip: Can determine whether an AdmissionRequest has to be accepted or rejected based on other resources already deployed in the cluster.
  policyReporter:
    title: Policy Reporter
    link: Policy Reporter UI
    noSchema:
      banner: Kubewarden has not been installed, this will need to be accomplished before installing the Policy Reporter
      link: Install Kubewarden
    incompatible:
      banner: 'Your cluster does not support policy reports, upgrade your Kubewarden to version `1.7.0` or greater to add the required crds.'
      current: Current Kubewarden Controller version
      noCrds:
        banner: 'The CRDs for `wgpolicyk8s.io.clusterpolicyreport` or `wgpolicyk8s.io.policyreport` can not be found. These must be installed to support policy reports.'
    service:
      main:
        banner:
          unavailable: 'The Policy Reporter service is unavailable, ensure the properties `auditScanner.enable` and `auditScanner.policyReporter` are set to `true` within the Kubewarden Controller chart.'
      ui:
        banner:
          unavailable: 'The Policy Reporter UI service is unavailable, ensure the property `policy-reporter.ui.enabled` is set to `true` within the Kubewarden Controller chart.'
    url:
      banner:
        unavailable: The Policy Reporter UI proxy URL is unavailble, please ensure that the UI is properly configured.
    deployment:
      banner:
        unavailable: 'The Policy Reporter UI Deployment is currently in a `{ state }` state, please wait.'
    headers:
      policyReports:
        label: Compliance
        description: Policy Reports are the results of the policy scans that are stored using the PolicyReport Custom Resource.
      clusterPolicyReports:
        label: Cluster Compliance
        description: Cluster Policy Reports are the results of the policy scans that are stored using the ClusterPolicyReport Custom Resource.
      label: Compliance
      description: When using the Kubewarden Audit Scanner, the results of the policy scans are stored using the PolicyReport Custom Resource.
      policyReportsTab:
        policy:
          label: Policy
        rule:
          label: Rule
        severity:
          label: Severity
        status:
          label: Status
        summary:
          label: Summary
        message:
          title: Message
        category: Category
        properties:
          policy-uid: Policy UID
          version: policy-resource-version
          mutating: Mutating
          validating: Validating

asyncButton:
  artifactHub:
    action: Add ArtifactHub To Whitelist
    success: Added
    waiting: Adding&hellip;
  certManager:
    action: Apply Cert-Manager Package
    success: Applied
    waiting: Installing&hellip;
  kubewardenRepository:
    action: Add Kubewarden Repository
    success: Added
    waiting: Adding&hellip;
  kubewardenPolicyCatalog:
    action: Add Policy Catalog Repository
    success: Added
    waiting: Adding&hellip;
  grafanaDashboard:
    action: Add Grafana Dashboards
    success: Added
    waiting: Adding&hellip;
  serviceMonitor:
    action: Add Service Monitor
    success: Added
    waiting: Adding&hellip;
  serviceMonitorUpgrade:
    action: Upgrade Service Monitor
    success: Upgraded
    waiting: Upgrading&hellip;
  policyReporterRepo:
    action: Add Policy Reporter Repository
    success: Added
    waiting: Adding&hellip;
  policyReporterChart:
    action: Install Policy Reporter Chart
    success: Installed
    waiting: Installing&hellip;

typeLabel:
  policies.kubewarden.io.policyserver: Policy Servers
  policies.kubewarden.io.admissionpolicy: Admission Policies
  policies.kubewarden.io.clusteradmissionpolicy: Cluster Admission Policies
  policies.kubewarden.io.clusteradmissionpolicygroup: Cluster Admission Policy Groups
  policies.kubewarden.io.admissionpolicygroup: Admission Policy Groups
